// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTrackingSystem.Data;

#nullable disable

namespace TimeTrackingSystem.Migrations
{
    [DbContext(typeof(SystemContext))]
    [Migration("20240318013729_addDBcontext")]
    partial class addDBcontext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TimeTrackingSystem.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("AccountID");

                    b.HasIndex("RoleID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Clock", b =>
                {
                    b.Property<int>("ClockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClockId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("RestTime")
                        .HasColumnType("int");

                    b.Property<int>("WorkingTime")
                        .HasColumnType("int");

                    b.HasKey("ClockId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Clocks");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupID"), 1L, 1);

                    b.Property<int>("LeaderID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupID");

                    b.HasIndex("LeaderID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.GroupMember", b =>
                {
                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.HasKey("AccountID", "GroupID");

                    b.HasIndex("GroupID");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Meeting", b =>
                {
                    b.Property<Guid>("MeetingCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime>("CloseAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpenAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MeetingCode");

                    b.HasIndex("GroupID");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Name = "User"
                        },
                        new
                        {
                            RoleID = 2,
                            Name = "Premium User"
                        });
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskID"), 1L, 1);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskID");

                    b.HasIndex("AccountID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Account", b =>
                {
                    b.HasOne("TimeTrackingSystem.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Clock", b =>
                {
                    b.HasOne("TimeTrackingSystem.Models.Account", "Account")
                        .WithOne("Clock")
                        .HasForeignKey("TimeTrackingSystem.Models.Clock", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Group", b =>
                {
                    b.HasOne("TimeTrackingSystem.Models.Account", "Leader")
                        .WithMany("LeadGroups")
                        .HasForeignKey("LeaderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.GroupMember", b =>
                {
                    b.HasOne("TimeTrackingSystem.Models.Account", "Account")
                        .WithMany("JoinGroups")
                        .HasForeignKey("AccountID")
                        .IsRequired();

                    b.HasOne("TimeTrackingSystem.Models.Group", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupID")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Meeting", b =>
                {
                    b.HasOne("TimeTrackingSystem.Models.Group", "Group")
                        .WithMany("Meeting")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Task", b =>
                {
                    b.HasOne("TimeTrackingSystem.Models.Account", "Account")
                        .WithMany("Tasks")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Account", b =>
                {
                    b.Navigation("Clock");

                    b.Navigation("JoinGroups");

                    b.Navigation("LeadGroups");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Group", b =>
                {
                    b.Navigation("Meeting");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("TimeTrackingSystem.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
